// gdext/src/{{LIB_NAME}}/register_types.cpp

#include "register_types.h"
#include "{{CLASS_NAME}}.h"

using namespace godot;

// Called once when Godot loads our plugin/library (scene tree level init)
void    initialize_{{LIB_NAME}}(ModuleInitializationLevel p_level)
{
    if (p_level != MODULE_INITIALIZATION_LEVEL_SCENE)
        return ;
    
        // GDREGISTER_RUNTIME_CLASS({{CLASS_NAME}});
        GDREGISTER_CLASS({{CLASS_NAME}}); // <- editor-visible registration
}

// Called on shutdown (scene tree level)
// Called when Godot unloads our plugin
void    uninitialize_{{LIB_NAME}}(ModuleInitializationLevel p_level)
{
    if (p_level != MODULE_INITIALIZATION_LEVEL_SCENE)
        return ;
}

// Exported entry symbol (must match .gdextension's entry_symbol)
extern "C"  GDExtensionBool GDE_EXPORT {{ENTRY_SYMBOL}}(
    GDExtensionInterfaceGetProcAddress p_get_proc_address,
	const GDExtensionClassLibraryPtr p_library,
	GDExtensionInitialization *r_initialization)
{
	godot::GDExtensionBinding::InitObject	init_obj(
        p_get_proc_address, p_library, r_initialization
    );
    
    init_obj.register_initializer(initialize_{{LIB_NAME}});
    init_obj.register_terminator(uninitialize_{{LIB_NAME}});
    init_obj.set_minimum_library_initialization_level(
        MODULE_INITIALIZATION_LEVEL_SCENE
    );
    return (init_obj.init());
}
